

PKCS-8 {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-8(8)
         modules(1) pkcs-8(1)}

-- $Revision: 1.5 $

-- This module has been checked for conformance with the ASN.1
-- standard by the OSS ASN.1 Tools

DEFINITIONS IMPLICIT TAGS ::=

BEGIN

-- EXPORTS All --
-- All types and values defined in this module is exported for use in
-- other ASN.1 modules.

IMPORTS




 RSAPrivateKey FROM PKCS-1 {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1) modules(0) pkcs-1(1)};


-- Private-key information syntax
AlgorithmIdentifier ::= SEQUENCE {
	 algorithm OBJECT IDENTIFIER,
	 parameters ANY OPTIONAL
}
PrivateKeyInfo ::= SEQUENCE {
   version Version,
   privateKeyAlgorithm AlgorithmIdentifier,
   privateKey [UNIVERSAL 4] PrivateKey,
   attributes [0] Attributes OPTIONAL }

Version ::= INTEGER {v1(0)}

PrivateKey ::= CHOICE {
  rsaPrivateKey RSAPrivateKey,
  privateKey    ANY
}

Attribute  ::= SEQUENCE {
   id  OBJECT IDENTIFIER,
   val ANY
}
Attributes ::= SET OF Attribute


-- Encrypted private-key information syntax

EncryptedPrivateKeyInfo ::= SEQUENCE {
    encryptionAlgorithm AlgorithmIdentifier,
    encryptedData EncryptedData
}

EncryptedData ::= OCTET STRING


PublicKeyInfo ::= CHOICE {
  rsaPublicKey  SEQUENCE {
                            publicAlgorithm AlgorithmIdentifier,
                            publicKey       [UNIVERSAL 3] EXPLICIT RSAParams
                         },
  ecPublicKey   SEQUENCE {
                            publicAlgorithm SEQUENCE {
                              algorithmID  OBJECT IDENTIFIER,
                              parameter    OBJECT IDENTIFIER
                            },
                            publicKey   BIT STRING
                         },
  dsaPublicKey  SEQUENCE {
                            publicAlgorithm SEQUENCE {
                                                algorithmID  OBJECT IDENTIFIER,
                                                dsaParams DSAParams 
                                              },
                            publicKey       [UNIVERSAL 3] EXPLICIT DSAParams-Y
                         }

}
DSAParams ::= SEQUENCE {
        p    INTEGER,
        q    INTEGER,
        g    INTEGER
    }
RSAParams ::= SEQUENCE {
        modulus           INTEGER,  -- n
        publicExponent    INTEGER   -- e
    }
DSAParams-Y ::= INTEGER
END